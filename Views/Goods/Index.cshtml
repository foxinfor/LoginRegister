@model IEnumerable<LoginRegister.Models.Goods>
@{
    var categories = ViewBag.Categories as IEnumerable<LoginRegister.Models.Category>;
}

<head>
    <link rel="stylesheet" type="text/css" href="~/css/main.css" />
</head>

<h1>Список товаров</h1>

<label for="categorySelect">Выберите категорию:</label>
<select id="categorySelect" class="form-select" onchange="filterByCategory(this.value)">
    <option value="">Все категории</option>
    @foreach (var category in categories)
    {
        <option value="@category.Id">@category.Name</option>
    }
</select>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Название</th>
            <th>Количество</th>
            <th>Фото</th>
            @if (User.Identity.IsAuthenticated)
            {
                <th>Действия</th>
            }
        </tr>
    </thead>
    <tbody id="goodsTableBody">
        @foreach (var item in Model)
        {
            <tr data-category-id="@item.CategoryId">
                <td>@item.Id</td>
                <td>@item.Name</td>
                <td>@item.Count</td>
                <td><img src="@item.ImageSrc" alt="@item.Name" /></td>
                <td>
                    @if (User.IsInRole("Администратор"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Редактировать</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Удалить</a>
                    }
                    @if (User.Identity.IsAuthenticated)
                    {
                        <button class="btn btn-info" onclick="subscribe(@item.Id)">Добавить в избранное</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@if (User.IsInRole("Администратор"))
{
    <a asp-action="Create" class="btn btn-success">Добавить товар</a>
}

<script>
    const userEmail = '@User.Identity.Name';

    async function subscribe(goodId) {
        if (!userEmail) {
            alert('Вы не авторизованы. Пожалуйста, войдите в систему.');
            return;
        }

        const response = await fetch('/Messages/Subscribe', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ GoodId: goodId, RecipientEmail: userEmail })
        });

        if (response.ok) {
            alert('Вы добавили товар в избранное!');
        } else {
            alert('Ошибка при подписке. Попробуйте еще раз.');
        }
    }

        function filterByCategory(categoryId) {
        const rows = document.querySelectorAll('#goodsTableBody tr');
        rows.forEach(row => {
            const rowCategoryId = row.getAttribute('data-category-id');
            if (categoryId === "" || rowCategoryId == categoryId) {
                row.style.display = ''; 
            } else {
                row.style.display = 'none'; 
            }
        });
    }
</script>